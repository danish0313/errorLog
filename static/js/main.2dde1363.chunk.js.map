{"version":3,"sources":["App.module.css","components/navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","results","filters","title","hr","time","loader","load5","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","textAlign","nav","backgroundColor","Navbar","classes","react_default","a","createElement","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","App","state","errors","Data","data","filter","searchdata","filterHandler","e","res","target","value","_this","facility","setState","level","timeStamp","this","Output","i","length","index","GetIndexIfLogExists","message","push","arr","Object","create","_this2","showingLog","map","Fragment","key","split","join","reduce","el","concat","onChange","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2dde1363.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"App_results__2j56V\",\"filters\":\"App_filters__12yRK\",\"title\":\"App_title__UzIVB\",\"hr\":\"App_hr__3d9R_\",\"time\":\"App_time__1JQH-\",\"loader\":\"App_loader__2nBsp\",\"load5\":\"App_load5__2-VTF\"};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'center',\r\n  },\r\n  nav: {\r\n\r\n    backgroundColor: '#171c42',\r\n  },\r\n}));\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.nav} >\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"primary\" aria-label=\"menu\">\r\n\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n          Error Logs !\r\n\r\n          </Typography>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React,  {Component} from 'react';\nimport Navbar  from './components/navbar';\nimport Data  from './db.json';\nimport classes  from './App.module.css';\nclass App extends Component {\n\nstate = {\nerrors : Data.data,\n\nfilter : false,\n\nsearchdata : []\n}\n\n\ncomponentDidMount(){\n\n  // Loop Through the Logdata\n     let data = this.state.errors;\n     let Output = [];\n\n     for (let i = 0; i < data.length; i++) {\n\n         let index = GetIndexIfLogExists(data[i],Output) ;\n                 if(index >= 0)\n         {\n             Output[index].message += \"\\n\"+data[i].message;\n         }\n         else\n         {\n             Output.push(data[i]);\n         }\n\n     }\n\n  // Check whether the log already preset if yes send the index\n  function GetIndexIfLogExists(value, arr) {\n     let index = -1;\n     for (let i = 0; i < arr.length; i++) {\n\n         if (arr[i].facility === value.facility &&\n             arr[i].level === value.level &&\n             arr[i].timeStamp === value.timeStamp\n         ) {\n             index = i;\n             break\n         }\n     }\n     return index;\n  }\n\n\n  //removing duplications from logs\n  let results = Output.filter(function (a) {\n  return !this[a.message] && (this[a.message] = true);\n\n  }, Object.create(null));\n\n\n// setting the state\nthis.setState({\n\nerrors: results\n\n})\n\n}\n\n\n\n\n\n// for filtering of records on UI\n\nfilterHandler =(e) => {\nlet res = null;\n\n\n// for facility\n\nif(e.target.value === \"GF::afml\" ||  e.target.value === \"GF::eai:eproduct\"){\n   res = this.state.errors.filter( (data) => (data.facility === e.target.value) )\n\n  this.setState({\n\n  searchdata:  res ,\n    filter : true\n  })\n\n}\n\n // for level\nelse if (e.target.value === \"Notice\" ||  e.target.value === \"Debug\") {\n\nres = this.state.errors.filter( (data) => (data.level === e.target.value) )\n\n this.setState({\n\n searchdata:  res ,\n filter : true\n })\n}\n\n\n\n// for TimeStamp\n\nelse if (e.target.value === \"2019-02-04T20:51:54.685Z\" ||\ne.target.value === \"2019-02-05T20:52:05.057Z\" ||\ne.target === \"2019-02-05T20:52:05.058Z\" ||\ne.target.value === \"2019-02-05T20:52:05.059Z\" ||\ne.target.value === \"2019-02-05T20:52:05.060Z\" ||\ne.target.value === \"2019-02-05T20:52:05.061Z\" ||\ne.target.value === \"2019-02-05T20:52:12.705Z\" )\n{\n\nres = this.state.errors.filter( (data) => (data.timeStamp === e.target.value) )\n\n this.setState({\n\n searchdata:  res ,\n filter : true\n })\n}\n\n// if e.target.value is empty\nelse{\nthis.setState({\nfilter : false\n  })}\n\n\n}\n\n\nrender() {\n\n  // moving message to a new line\n\n  function textToHtml(html)\n  {\n    let arr = html.split(/<br\\s*\\/?>/i);\n    return arr.reduce((el, a) => el.concat(a, <br />), []);\n  }\n\n\n // mapping the entire array\n\nlet showingLog = this.state.searchdata.map( (data , index) => ( <>\n\n<div className={classes.title}>\n    <span > Facility:  {data.facility} </span>\n    <span> Level:  {data.level} </span>\n  </div>\n  <b>Error Messages !</b>\n<p key={data[index]}> {textToHtml(data.message.split('\\n').join('<br/>'))} </p>\n\n\n\n<p className = {classes.time}> TimeStamp:  {data.timeStamp}  </p>\n<hr className={classes.hr}/>\n</>\n));\n\n\n  return (\n\n\n<React.Fragment>\n\n<Navbar/>\n\n<center>\n<div className= {classes.filters}>\n<h1>Search Your Log!</h1>\n<label>Select facility: </label>\n<select onChange={(e) => this.filterHandler(e)}>\n  <option value=\"\" ></option>\n  <option value=\"GF::afml\">GF::afml</option>\n  <option value=\"GF::eai:eproduct\">GF::eai:eproduct</option>\n\n</select>\n\n<label>Select level: </label>\n\n<select onChange={(e) => this.filterHandler(e)}>\n<option value=\"\"></option>\n  <option value=\"Notice\">Notice</option>\n  <option value=\"Debug\">Debug</option>\n\n</select>\n\n\n<label>Select TimeStamp: </label>\n\n<select onChange={(e) => this.filterHandler(e)}>\n<option value=\"\"></option>\n  <option value=\"2019-02-04T20:51:54.685Z\">2019-02-04T20:51:54.685Z</option>\n  <option value=\"2019-02-05T20:52:05.057Z\">2019-02-05T20:52:05.057Z</option>\n    <option value=\"2019-02-05T20:52:05.058Z\">2019-02-05T20:52:05.058Z</option>\n    <option value=\"2019-02-05T20:52:05.059Z\"> 2019-02-05T20:52:05.059Z</option>\n      <option value=\"2019-02-05T20:52:05.060Z\"> 2019-02-05T20:52:05.060Z </option>\n      <option value=\"2019-02-05T20:52:05.061Z\"> 2019-02-05T20:52:05.061Z   </option>\n            <option value=\"2019-02-05T20:52:12.705Z\">2019-02-05T20:52:12.705Z </option>\n</select>\n\n\n\n\n\n\n  </div>\n\n<div className ={classes.results}>\n\n    {this.state.filter ?  showingLog : (<>\n      <h2>Please Select Options Above! </h2>\n      <div className={classes.loader}></div> </>\n\n   )}\n\n</div>\n</center>\n</React.Fragment>\n\n\n\n  );\n}\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}